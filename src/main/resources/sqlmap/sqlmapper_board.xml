<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MyBatis에게 Mapper 경로를 적어야한다. -->
<mapper namespace="com.dw.board.mapper.BoardMapper"><!-- mapper위치 경로-->
<!-- 게시판 저장 -->
<insert id="insertBoard">
INSERT INTO board
(
title,
content
<if test="studentsId != 0">
,students_id
</if>
)
VALUES
(
#{title},
#{content}
<if test="studentsId != 0">
,#{studentsId}
</if>
)
<!--BoardVO의 studentsId는 FK기 때문에 기본키를 가진 student테이블에도 없는 값을 board테이블에서도 가질 수 없다.
즉, students테이블에 있는 students_id가 있는 데이터의 값만 board테이블에서 insert할 수 있다는 것이다.
 마이크 M은 다음과 같이 썼다.“FK가 작동하는 방식은 해당 테이블에 참조 된 테이블의 기본 키 열에도없는 값을 가질 수 없다는 것입니다.”  -->
</insert>



<!-- join으로 조회할 때 resultType을 map으로 -->
<select id="selectBoard" resultType="map">
SELECT 
	b.board_id AS boardId,
	b.students_id AS studentsId,
	s.students_name AS studentsName,
	b.title,
	b.content,
	IFNULL(DATE_FORMAT(b.update_at, '%Y-%m-%d'), "-") AS updateAt,
	DATE_FORMAT(b.create_at, '%Y-%m-%d') AS createAt
FROM board AS b INNER JOIN students AS s
ON b.students_id = s.students_id 
</select>
 <!-- 기존 쿼리
SELECT
	b.board_id AS boardId,
	b.students_id AS studentsId,
	s.students_name AS studentsName,
	title,
	content,
	b.update_at AS updateAt,
	b.create_at AS createAt
FROM board b inner join students s
on b.students_id = s.students_id
-->

<update id="updateBoard">
UPDATE board 
SET
	title = #{title},
	update_at = date_format(now(), "%Y-%m-%d"),
	content = #{content}
WHERE board_id = #{boardId}
</update>

<delete id="removeBoard">
DELETE from board 
WHERE board_id = #{id}
</delete>

<select id="detailBoard" resultType="BoardVO">
SELECT 
	title,
	content,
	create_at
FROM board
WHERE
board_id = #{id}
</select>

</mapper>